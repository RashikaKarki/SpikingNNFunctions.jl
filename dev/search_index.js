var documenterSearchIndex = {"docs":
[{"location":"thresholds/#Threshold-Functions-1","page":"Thresholds","title":"Threshold Functions","text":"","category":"section"},{"location":"thresholds/#","page":"Thresholds","title":"Thresholds","text":"We provide non-mutating functions for the following threshold models:","category":"page"},{"location":"thresholds/#","page":"Thresholds","title":"Thresholds","text":"Inhomogenouos Poisson process","category":"page"},{"location":"thresholds/#","page":"Thresholds","title":"Thresholds","text":"poisson","category":"page"},{"location":"synapses/#Synapse-Functions-1","page":"Synapses","title":"Synapse Functions","text":"","category":"section"},{"location":"synapses/#","page":"Synapses","title":"Synapses","text":"We provide non-mutating functions for the following synapse models:","category":"page"},{"location":"synapses/#","page":"Synapses","title":"Synapses","text":"Dirac-Delta\nAlpha\nExcited Postsynaptic Potential (EPSP)","category":"page"},{"location":"synapses/#","page":"Synapses","title":"Synapses","text":"delta\nalpha\nepsp","category":"page"},{"location":"neurons/#Neuron-Functions-1","page":"Neurons","title":"Neuron Functions","text":"","category":"section"},{"location":"neurons/#","page":"Neurons","title":"Neurons","text":"We provide in-place and non-mutating functions for the following neuron models:","category":"page"},{"location":"neurons/#","page":"Neurons","title":"Neurons","text":"Leaky-Integrate-and-Fire\nSimplified Spike Response Model (SRM0)","category":"page"},{"location":"neurons/#","page":"Neurons","title":"Neurons","text":"lif\nlif!\nsrm0\nsrm0!","category":"page"},{"location":"#SpikingNNFunctions.jl-1","page":"Home","title":"SpikingNNFunctions.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Fast spiking neural network primitive functions for use in other packages. The primary purpose of the package is to act as a dependency for SpikingNN.jl. Exctracting these primitives into their own package allows users to easily extend SpikingNN.jl (similar to NNlib.jl's role to Flux.jl).","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Functions are designed to dispatch on scalar arguments, array arguments, and CuArray arguments. So, the function should be available no matter what device you intend to run on.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"For testing, refer to the SpikingNN.jl repo where these primitives are covered as part of testing.","category":"page"},{"location":"#Future-Work-1","page":"Home","title":"Future Work","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Using LoopVectorization.jl to speed up CPU implementations (currently this causes issues for AMD CPUs)\nExploring dispatch on sparse arrays","category":"page"}]
}
